"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var generator_1 = require("../../../generator");
var ModelCreateOneOrManyInputGenerator = /** @class */ (function (_super) {
    __extends(ModelCreateOneOrManyInputGenerator, _super);
    function ModelCreateOneOrManyInputGenerator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ModelCreateOneOrManyInputGenerator.prototype.wouldBeEmpty = function (model, args) {
        return (!this.hasWriteableFields(model.fields) &&
            !(this.hasUniqueField(model.fields) && !model.isEmbedded));
    };
    ModelCreateOneOrManyInputGenerator.prototype.generateFields = function (model, args) {
        var fields = {};
        if (this.hasCreateInputFields(model.fields)) {
            fields.create = {
                type: this.maybeWrapList(this.generators.modelCreateInput.generate(model, {})),
            };
        }
        if (this.hasUniqueField(model.fields) && !model.isEmbedded) {
            fields.connect = {
                type: this.maybeWrapList(this.generators.modelWhereUniqueInput.generate(model, {})),
            };
        }
        return fields;
    };
    return ModelCreateOneOrManyInputGenerator;
}(generator_1.ModelInputObjectTypeGenerator));
exports.ModelCreateOneOrManyInputGenerator = ModelCreateOneOrManyInputGenerator;
// tslint:disable-next-line:max-classes-per-file
var ModelCreateManyInputGenerator = /** @class */ (function (_super) {
    __extends(ModelCreateManyInputGenerator, _super);
    function ModelCreateManyInputGenerator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ModelCreateManyInputGenerator.prototype.getTypeName = function (input, args) {
        return input.name + "CreateManyInput";
    };
    ModelCreateManyInputGenerator.prototype.maybeWrapList = function (input) {
        return this.generators.scalarTypeGenerator.wrapList(input);
    };
    return ModelCreateManyInputGenerator;
}(ModelCreateOneOrManyInputGenerator));
exports.default = ModelCreateManyInputGenerator;
//# sourceMappingURL=modelCreateManyInputGenerator.js.map