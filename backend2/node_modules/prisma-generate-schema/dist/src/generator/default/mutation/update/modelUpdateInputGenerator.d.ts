import { RelatedModelInputObjectTypeGenerator, RelatedGeneratorArgs, IGenerators } from '../../../generator';
import { IGQLType, IGQLField } from 'prisma-datamodel';
export default class ModelUpdateInputGenerator extends RelatedModelInputObjectTypeGenerator {
    static generateScalarFieldTypeForInputType(model: IGQLType, field: IGQLField, generators: IGenerators): import("graphql").GraphQLObjectType | import("graphql").GraphQLScalarType | import("graphql").GraphQLInterfaceType | import("graphql").GraphQLUnionType | import("graphql").GraphQLEnumType | import("graphql").GraphQLInputObjectType | import("graphql").GraphQLList<any> | null;
    /**
     * Generates an update model input field for a relational type, handling the four cases many/one and with/without related type.
     * @param model
     * @param field
     * @param generators
     */
    static generateRelationFieldForInputType(model: IGQLType, field: IGQLField, generators: IGenerators): import("graphql").GraphQLInputObjectType | null;
    static relationWouldBeEmpty(model: IGQLType, field: IGQLField, generators: IGenerators): boolean;
    static getGeneratorForRelation(model: IGQLType, field: IGQLField, generators: IGenerators): RelatedModelInputObjectTypeGenerator;
    wouldBeEmpty(model: IGQLType, args: RelatedGeneratorArgs): boolean;
    getTypeName(input: IGQLType, args: RelatedGeneratorArgs): string;
    protected generateScalarFieldType(model: IGQLType, args: RelatedGeneratorArgs, field: IGQLField): import("graphql").GraphQLObjectType | import("graphql").GraphQLScalarType | import("graphql").GraphQLInterfaceType | import("graphql").GraphQLUnionType | import("graphql").GraphQLEnumType | import("graphql").GraphQLInputObjectType | import("graphql").GraphQLList<any> | null;
    protected generateRelationFieldType(model: IGQLType, args: RelatedGeneratorArgs, field: IGQLField): import("graphql").GraphQLInputObjectType | null;
}
