"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var english_1 = require("./inflector/english");
/**
 * Converts the first character of a word to upper case
 * @param name
 */
function capitalize(name) {
    return name.substring(0, 1).toUpperCase() + name.substring(1);
}
exports.capitalize = capitalize;
/**
 * Converts the first character of a word to lower case.
 * @param name
 */
function camelCase(name) {
    return name.substring(0, 1).toLowerCase() + name.substring(1);
}
exports.camelCase = camelCase;
/**
 * Pluralizes a word like the prisma server would do.
 * @param name The word to pluralize.
 */
function plural(name) {
    var pluralWord = english_1.English.plural(name);
    if (pluralWord === null || pluralWord === name) {
        if (name.endsWith('s')) {
            return name + 'es';
        }
        else {
            return name + 's';
        }
    }
    else {
        return pluralWord;
    }
}
exports.plural = plural;
/**
 * Removes all indent from a multi-line string literal.
 * The indent is the smalles indent off all non-empty lines.
 * If the first line is empty, it is removed.
 * @param literal
 */
function dedent(literal) {
    var lines = literal.split('\n');
    if (lines.length === 0) {
        return '';
    }
    if (lines[0].length === 0) {
        lines.splice(0, 1);
    }
    // Find minimum indent
    var indent = -1;
    for (var _i = 0, lines_1 = lines; _i < lines_1.length; _i++) {
        var line = lines_1[_i];
        var trimmed = line.trimLeft();
        if (trimmed.length === 0) {
            continue;
        }
        var lineIndent = line.indexOf(trimmed);
        if (indent === -1) {
            indent = lineIndent;
        }
        else {
            indent = Math.min(lineIndent, indent);
        }
    }
    // Dedent document
    for (var i = 0; i < lines.length; i++) {
        if (lines[i].length < indent) {
            lines[i] = ''; // Line containing only whitespace or empty.
        }
        else {
            lines[i] = lines[i].substring(indent);
        }
    }
    return lines.join('\n');
}
exports.dedent = dedent;
//# sourceMappingURL=util.js.map