"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var gqlAssert_1 = require("./gqlAssert");
/**
 * Sorts the given list of types in topological order,
 * depending on their relation. Respects embedded types.
 *
 * The topological order is established by traversing the dependency graph in depth-first order (dfs toposort).
 * @param types The types to sort.
 * @returns A new list containing all types in topological order.
 */
function toposort(types) {
    var sorted = [];
    for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {
        var type = types_1[_i];
        // Embedded never at top level.
        if (!type.isEmbedded) {
            toposortType(type, sorted);
        }
    }
    if (sorted.length !== types.length) {
        gqlAssert_1.default.raise('Failed to establish topological order. This usually indicates an embedded type which is not used in the data model.');
    }
    return sorted;
}
exports.toposort = toposort;
function toposortType(type, sorted) {
    if (!sorted.includes(type)) {
        sorted.push(type);
        for (var _i = 0, _a = type.fields; _i < _a.length; _i++) {
            var field = _a[_i];
            if (typeof field.type !== 'string') {
                toposortType(field.type, sorted);
            }
        }
    }
}
//# sourceMappingURL=sort.js.map