"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var type_1 = require("graphql/type");
var generator_1 = require("../../generator");
var AggregateModelGenerator = /** @class */ (function (_super) {
    __extends(AggregateModelGenerator, _super);
    function AggregateModelGenerator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AggregateModelGenerator.prototype.getTypeName = function (input, args) {
        return "Aggregate" + input.name;
    };
    AggregateModelGenerator.prototype.generateInternal = function (input, args) {
        return new type_1.GraphQLObjectType({
            name: this.getTypeName(input, args),
            fields: {
                count: { type: new type_1.GraphQLNonNull(type_1.GraphQLInt) },
            },
        });
    };
    return AggregateModelGenerator;
}(generator_1.ModelObjectTypeGenerator));
exports.default = AggregateModelGenerator;
//# sourceMappingURL=aggregateModelGenerator.js.map