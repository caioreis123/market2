import { IGenerators, ModelInputObjectTypeGenerator, RelatedModelInputObjectTypeGenerator } from '../../../generator';
import { IGQLType, IGQLField } from 'prisma-datamodel';
import { GraphQLObjectType, GraphQLList, GraphQLInputObjectType, GraphQLInputFieldConfigMap } from 'graphql/type';
export default class ModelCreateInputGenerator extends ModelInputObjectTypeGenerator {
    /**
     * Generates an create model input field for a relational type, handling the four cases many/one and with/without related type.
     * @param model
     * @param field
     * @param generators
     */
    static generateRelationFieldForInputType(model: IGQLType, field: IGQLField, generators: IGenerators): GraphQLInputObjectType | import("graphql/type").GraphQLNonNull<GraphQLInputObjectType> | null;
    static relationWouldBeEmpty(model: IGQLType, field: IGQLField, generators: IGenerators): boolean;
    static getGeneratorForRelation(model: IGQLType, field: IGQLField, generators: IGenerators): RelatedModelInputObjectTypeGenerator;
    static generateScalarFieldTypeForInputType(model: IGQLType, field: IGQLField, generators: IGenerators): GraphQLObjectType | import("graphql/type").GraphQLScalarType | import("graphql/type").GraphQLInterfaceType | import("graphql/type").GraphQLUnionType | import("graphql/type").GraphQLEnumType | GraphQLInputObjectType | GraphQLList<any> | null;
    wouldBeEmpty(model: IGQLType, args: {}): boolean;
    getTypeName(input: IGQLType, args: {}): string;
    /**
     * Generates all fields of this type.
     * @param model
     * @param args
     */
    protected generateFields(model: IGQLType, args: {}): GraphQLInputFieldConfigMap;
    protected generateRelationFieldType(model: IGQLType, args: {}, field: IGQLField): GraphQLInputObjectType | import("graphql/type").GraphQLNonNull<GraphQLInputObjectType> | null;
    protected generateScalarFieldType(model: IGQLType, args: {}, field: IGQLField): GraphQLObjectType | import("graphql/type").GraphQLScalarType | import("graphql/type").GraphQLInterfaceType | import("graphql/type").GraphQLUnionType | import("graphql/type").GraphQLEnumType | GraphQLInputObjectType | GraphQLList<any> | null;
}
